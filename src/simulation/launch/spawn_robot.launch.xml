<launch>
    <arg name="robot_name" default="robot0" />
    <arg name="pose_x" default="0" />
    <arg name="pose_y" default="0" />
    <arg name="pose_yaw" default="0" />
    <arg name="use_move_base" default="false" />
    <arg name="use_tf" default="false" />
    <arg name="use_gmapping" default="false" />
    <param name="/use_sim_time" value="true" />
    
    <group ns="$(arg robot_name)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find simulation)/urdf/robot.urdf.xacro prefix:=$(arg robot_name)" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

        <node name="$(arg robot_name)_urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name) -param robot_description -x $(arg pose_x) -y $(arg pose_y) -z 0.0 -Y $(arg pose_yaw)" />

        <!-- <node name="field_controller" pkg="simulation" type="laser_field_controller.py">
            <param name="name" value="$(arg robot_name)"/>
        </node> -->
        
        <node name="$(arg robot_name)_controller" pkg="tracking_pid" type="controller" output="screen">
            <remap from="move_base/cmd_vel" to="/$(arg robot_name)/cmd_vel" />
            <!-- <remap from="/path" to="/$(arg ns)/path" /> -->
            <remap from="local_trajectory" to="/$(arg robot_name)/trajectory" />
            <param name="controller_debug_enabled" value="false" />
            <param name="base_link_frame" value="$(arg robot_name)/base_link" />
            <param name="map_frame" value="map" />
            <param name="holonomic_robot" value="true"/>
            <param name="l" value="0.05" />
        </node>

        <group if="$(arg use_move_base)">
            <include file="$(find simulation)/launch/move_base.launch.xml">
                <arg name="robot_name" value="$(arg robot_name)" />
            </include>
        </group>

        <group if="$(arg use_tf)">
            <node name="$(arg robot_name)_static_tf_listener_one" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 map $(arg robot_name)/odom 100" output="screen" />
        </group>

        <group if="$(arg use_gmapping)">
            <node pkg="gmapping" name="slam_gmapping" type="slam_gmapping" output="screen">
                <remap from="scan" to="/$(arg robot_name)/scan" />
                <param name="delta" value="0.01" />
                <param name="xmin" value="-25" />
                <param name="xmax" value="25" />
                <param name="ymin" value="-25" />
                <param name="ymax" value="25" />
                <param name="base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="map_frame" value="map" />
                <param name="odom_frame" value="$(arg robot_name)/odom" />
                <param name="linearUpdate" value="0.5" />
                <param name="angularUpdate" value="0.436" />
                <param name="temporalUpdate" value="-1.0" />
                <param name="resampleThreshold" value="0.5" />
                <param name="particles" value="80" />
            </node>
        </group>

    </group>

</launch>